{"version":3,"sources":["App.jsx","index.jsx"],"names":["goods","App","useState","selectedGood","setSelectedGood","selectItem","e","row","target","closest","selected","document","querySelector","classList","remove","checkSelectingGood","goodInnerText","innerText","toggle","contains","className","type","onClick","map","good","cn","ReactDOM","render","getElementById"],"mappings":"4OAKaA,EAAQ,CACnB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGWC,EAAM,WACjB,MAAwCC,mBAAS,OAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KAgBMC,EAAa,SAACC,GAClB,IAAMC,EAAMD,EAAEE,OAAOC,QAAQ,MAE7B,GAAKF,EAAL,EAjByB,SAACA,GAC1B,GAAIJ,EAAc,CAChB,IAAMO,EAAWC,SAASC,cACxB,iCAGEF,IAAaH,GACfG,EAASG,UAAUC,OACjB,iCAaNC,CAAmBR,GACnB,IAAMS,EAAgBT,EAAIK,cAAc,yBAAyBK,UAEjEV,EAAIM,UAAUK,OAAO,gCAEjBX,EAAIM,UAAUM,SAAS,gCACzBf,EAAgBY,GAEhBZ,EAAgB,MAIpB,OACE,uBAAMgB,UAAU,oBAAhB,UACE,qBAAIA,UAAU,sCAAd,UACGjB,EAAY,UACNA,EADM,gBAET,oBAGHA,GACD,wBACE,UAAQ,cACRkB,KAAK,SACLD,UAAU,cACVE,QAAS,WACPlB,EAAgB,UAMtB,uBAAOgB,UAAU,QAAjB,SACE,gCACGpB,EAAMuB,KAAI,SAAAC,GAAI,OACb,qBACE,UAAQ,OAERJ,UAAWK,IAAG,CACZ,+BAAgCtB,IAAiBqB,IAJrD,UAOE,6BACE,wBACE,UAASrB,IAAiBqB,EAAO,eAAiB,YAClDH,KAAK,SACLD,UAAWK,IACT,SACA,CACE,UAAWtB,IAAiBqB,IAGhCF,QAASjB,EATX,SAWGF,IAAiBqB,EAAO,IAAM,QAInC,oBAAI,UAAQ,YAAYJ,UAAU,eAAlC,SACGI,MAtBEA,cC5EnBE,IAASC,OACP,cAAC,EAAD,IACAhB,SAASiB,eAAe,W","file":"static/js/main.e9d77e0f.chunk.js","sourcesContent":["import { useState } from 'react';\nimport cn from 'classnames';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goods = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nexport const App = () => {\n  const [selectedGood, setSelectedGood] = useState('Jam');\n\n  const checkSelectingGood = (row) => {\n    if (selectedGood) {\n      const selected = document.querySelector(\n        '.has-background-success-light',\n      );\n\n      if (selected !== row) {\n        selected.classList.remove(\n          'has-background-success-light',\n        );\n      }\n    }\n  };\n\n  const selectItem = (e) => {\n    const row = e.target.closest('tr');\n\n    if (!row) {\n      return;\n    }\n\n    checkSelectingGood(row);\n    const goodInnerText = row.querySelector('[data-cy=\"GoodTitle\"]').innerText;\n\n    row.classList.toggle('has-background-success-light');\n\n    if (row.classList.contains('has-background-success-light')) {\n      setSelectedGood(goodInnerText);\n    } else {\n      setSelectedGood('');\n    }\n  };\n\n  return (\n    <main className=\"section container\">\n      <h1 className=\"title is-flex is-align-items-center\">\n        {selectedGood\n          ? `${selectedGood} is selected`\n          : 'No goods selected'\n          }\n\n        {selectedGood && (\n        <button\n          data-cy=\"ClearButton\"\n          type=\"button\"\n          className=\"delete ml-3\"\n          onClick={() => {\n            setSelectedGood('');\n          }}\n        />\n        )}\n      </h1>\n\n      <table className=\"table\">\n        <tbody>\n          {goods.map(good => (\n            <tr\n              data-cy=\"Good\"\n              key={good}\n              className={cn({\n                'has-background-success-light': selectedGood === good,\n              })}\n            >\n              <td>\n                <button\n                  data-cy={selectedGood === good ? 'RemoveButton' : 'AddButton'}\n                  type=\"button\"\n                  className={cn(\n                    'button',\n                    {\n                      'is-info': selectedGood === good,\n                    },\n                  )}\n                  onClick={selectItem}\n                >\n                  {selectedGood === good ? '-' : '+'}\n                </button>\n              </td>\n\n              <td data-cy=\"GoodTitle\" className=\"is-vcentered\">\n                {good}\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </main>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}